#!/bin/bash

# ubuntu apt preferences
apt_preferences (){
CAP_DISTRO=`echo "${DISTRO}" | sed -e "s/\b\(.\)/\u\1/g"`
echo ""
echo "Blacking listing packages ..."
tee /etc/apt/preferences <<EOF
Package: rpi-eeprom linux-firmware linux-firmware-raspi2 pi-bluetooth raspberrypi-sys-mods
Pin: release o=${CAP_DISTRO}
Pin-Priority: 1
EOF
echo "Done."
}

# whiptail color palette (ubuntu)
palette_dark (){
mkdir -p /etc/newt
cat <<EOF > "/etc/newt/palette.dark"
root=,black
checkbox=,black
entry=,black
label=black,
actlistbox=,black
helpline=,black
roottext=lightgray,black
emptyscale=black
disabledentry=black,
EOF
ln -sf /etc/newt/palette.dark  /etc/alternatives/newt-palette
}

xorg_confs (){
mkdir -p /etc/X11/xorg.conf.d
cat <<EOF > "/etc/X11/xorg.conf.d/99-v3d.conf"
Section "OutputClass"
	Identifier "vc4"
	MatchDriver "vc4"
	Driver "modesetting"
	Option "PrimaryGPU" "true"
EndSection
EOF
}

# user scripts
uscripts_pre-stage1 (){
if [[ -f "files/userscripts/uscripts" ]]; then
	source files/userscripts/uscripts
	if [[ `type run_function0` ]] &>/dev/null; then run_function0; fi
fi
}

uscripts_stage1 (){
if [[ -f "files/userscripts/uscripts" ]]; then
	mkdir -p p2/root/userscripts
	cp -fr files/userscripts/* p2/root/userscripts/
	if [[ -f "p2/root/userscripts/README.md" ]]; then rm -f p2/root/userscripts/README.md; fi
	if [[ `type run_function1` ]] &>/dev/null; then run_function1; fi
fi
}

uscripts_stage2 (){
if [[ -f "/root/userscripts/uscripts" ]]; then
	source /root/userscripts/uscripts
	if [[ `type run_function2` ]] &>/dev/null; then
		echo ""
		echo -e "\033[1mRunning user scripts\e[0m ..."
		run_function2
		echo -e "\033[1mDone\e[0m."
	fi
fi
if [[ -e "/root/userscripts" ]]; then rm -fdr /root/userscripts; fi
}

uscripts_fin-stage1 (){
if [[ -f "files/userscripts/uscripts" ]]; then
	source files/userscripts/uscripts
	if [[ `type run_function3` ]] &>/dev/null; then run_function3; fi
fi
}

# fin and compress
finish_image (){
IMAGE_TIME="$(date +%T | sed 's/://g' | sed 's/..$//')"
IMAGE_FIN_NAME="${BOARD_EXT}-${DISTRO}-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${ARCH_EXT}-${FSTYPE}-${IMAGE_DATE}-${IMAGE_TIME}.img"
if [[ -f "${IMAGE_FILE_NAME}" ]]; then
	mv -f ${IMAGE_FILE_NAME} ${IMAGE_FIN_NAME}
else
	echo -e "Build error: ${IMAGE_FILE_NAME}"
	exit 1
fi
if [ $COMPRESS_IMG -eq 1 ]; then
	if [[ -f "${IMAGE_FIN_NAME}" ]]; then
		echo -e ""
		echo_compress
		xz -zev --threads=${CORES} ${IMAGE_FIN_NAME}
		if [[ -f "${IMAGE_FIN_NAME}.xz" ]]; then
			sha256sum ${IMAGE_FIN_NAME}.xz > ${IMAGE_FIN_NAME}.xz.sha256
			sha256sum --check ${IMAGE_FIN_NAME}.xz.sha256
		fi
	else
		echo -e ""
		echo -e "${IMAGE_FIN_NAME} not found?"
	fi
fi
}
